module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8],    // DIP switches on IO Shield
    output ledPlayer[4][7],
    output ledSequence[2][8],
    input buttonPlayer[4][2],
    input buttonControl[2]
  ) {

  // reset signal
  sig rst;

  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  counter cnt(#SIZE(7), #DIV(24), .clk(clk), .rst(rst));
    
  
  always {
  

    //---------------------------------------STANDARD ALWAYS STUFF---------------------------------------//
    
    // input raw inverted reset signal
    reset_cond.in = ~rst_n;

    // conditioned reset
    rst = reset_cond.out;

    // loop serial port
    usb_tx = usb_rx;

    // turn everything off
    led = 8h00;
    io_led = 3x{{8h00}};
    io_seg = 8hff;
    io_sel = 4hf;
    
    ledPlayer = 4x{{7b0}};
    ledSequence = 2x{{8b0}};
    
    
    ledPlayer[0] = cnt.value;
    
    




  }
}
