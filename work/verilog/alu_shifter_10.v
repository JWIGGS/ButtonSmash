/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_shifter_10 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn,
    output reg [15:0] result
  );
  
  
  
  wire [16-1:0] M_function_multiply_result;
  reg [8-1:0] M_function_multiply_a;
  reg [8-1:0] M_function_multiply_b;
  alu_multiply_13 function_multiply (
    .a(M_function_multiply_a),
    .b(M_function_multiply_b),
    .result(M_function_multiply_result)
  );
  
  reg [3:0] shift_amount;
  
  always @* begin
    M_function_multiply_a = a[0+7-:8];
    M_function_multiply_b = b[0+7-:8];
    shift_amount = b[0+3-:4];
    
    case (alufn[0+1-:2])
      2'h0: begin
        result = a << shift_amount;
      end
      2'h1: begin
        result = a >> shift_amount;
      end
      2'h3: begin
        result = $signed(a) >>> shift_amount;
      end
      2'h2: begin
        result = M_function_multiply_result;
      end
      default: begin
        result = a;
      end
    endcase
  end
endmodule
