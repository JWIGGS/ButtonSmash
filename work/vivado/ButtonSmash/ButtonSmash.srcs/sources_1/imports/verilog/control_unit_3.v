/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module control_unit_3 (
    input clk,
    input rst,
    input [15:0] wd,
    input [5:0] buttonPressed,
    output reg [5:0] alufn,
    output reg [15:0] a,
    output reg [15:0] b,
    output reg [5:0] buttonSeenOut,
    output reg [255:0] regfileRead
  );
  
  
  
  reg we;
  
  reg [3:0] ra;
  
  reg [3:0] rb;
  
  reg [3:0] rc;
  
  reg [1:0] bsel;
  
  wire [32-1:0] M_prng_num;
  reg [1-1:0] M_prng_next;
  reg [32-1:0] M_prng_seed;
  pn_gen_7 prng (
    .clk(clk),
    .rst(rst),
    .next(M_prng_next),
    .seed(M_prng_seed),
    .num(M_prng_num)
  );
  
  reg [26:0] M_delay_d, M_delay_q = 1'h0;
  
  reg [255:0] M_regfile_d, M_regfile_q = 256'h0008000000000000000000000000000000000000000000009fff000000000000;
  
  always @* begin
    M_delay_d = M_delay_q;
    M_regfile_d = M_regfile_q;
    
    alufn = 6'h00;
    ra = 4'h0;
    rb = 4'h0;
    rc = 1'h1;
    we = 1'h0;
    bsel = 2'h0;
    buttonSeenOut = 6'h00;
    M_prng_next = 1'h1;
    M_prng_seed = 32'hfac0d775;
    
    case (M_regfile_q[0+15-:16])
      1'h0: begin
        M_regfile_d[112+15-:16] = 16'h0000;
        M_regfile_d[144+15-:16] = 16'h0000;
        M_regfile_d[80+15-:16] = 16'h0000;
        M_regfile_d[176+15-:16] = 16'h0000;
        M_regfile_d[128+15-:16] = 16'h0000;
        M_regfile_d[160+15-:16] = 16'h0000;
        M_regfile_d[96+15-:16] = 16'h0000;
        M_regfile_d[192+15-:16] = 16'h0000;
        M_regfile_d[32+15-:16] = 16'h0000;
        M_regfile_d[208+15-:16] = M_prng_num[0+7-:8];
        M_regfile_d[224+15-:16] = ~M_prng_num[0+7-:8];
        M_regfile_d[0+15-:16] = 1'h1;
      end
      1'h1: begin
        if (buttonPressed[4+0-:1]) begin
          buttonSeenOut[4+0-:1] = 1'h1;
          M_regfile_d[0+15-:16] = 2'h2;
          M_regfile_d[32+15-:16] = M_regfile_q[48+15-:16];
        end
        if (buttonPressed[5+0-:1]) begin
          buttonSeenOut[5+0-:1] = 1'h1;
          M_regfile_d[208+15-:16] = M_prng_num[0+7-:8];
          M_regfile_d[224+15-:16] = ~M_prng_num[0+7-:8];
        end
      end
      2'h2: begin
        if (buttonPressed[5+0-:1]) begin
          buttonSeenOut[5+0-:1] = 1'h1;
          M_regfile_d[0+15-:16] = 1'h0;
        end else begin
          if (M_regfile_q[32+15-:16] == 16'h0000) begin
            M_regfile_d[0+15-:16] = 2'h3;
          end else begin
            M_regfile_d[32+15-:16] = M_regfile_q[32+15-:16] - 1'h1;
          end
        end
      end
      2'h3: begin
        if (buttonPressed[5+0-:1]) begin
          buttonSeenOut[5+0-:1] = 1'h1;
          M_regfile_d[0+15-:16] = 1'h0;
        end else begin
          M_regfile_d[64+0+0-:1] = ~M_regfile_q[64+0+0-:1];
          M_regfile_d[0+15-:16] = 3'h4;
        end
      end
      3'h4: begin
        if (buttonPressed[(1'h0 + M_regfile_q[64+15-:16])*1+0-:1]) begin
          buttonSeenOut[(1'h0 + M_regfile_q[64+15-:16])*1+0-:1] = 1'h1;
          M_regfile_d[(3'h7 + M_regfile_q[64+15-:16])*16+(M_regfile_q[(4'hb + M_regfile_q[64+15-:16])*16+15-:16])*1+0-:1] = 1'h1;
          M_regfile_d[(4'hb + M_regfile_q[64+15-:16])*16+15-:16] = M_regfile_q[(4'hb + M_regfile_q[64+15-:16])*16+15-:16] + 1'h1;
        end
        M_regfile_d[0+15-:16] = 3'h5;
      end
      3'h5: begin
        if (buttonPressed[(2'h2 + M_regfile_q[64+15-:16])*1+0-:1]) begin
          buttonSeenOut[(2'h2 + M_regfile_q[64+15-:16])*1+0-:1] = 1'h1;
          M_regfile_d[(4'h9 + M_regfile_q[64+15-:16])*16+(M_regfile_q[(4'hb + M_regfile_q[64+15-:16])*16+15-:16])*1+0-:1] = 1'h1;
          M_regfile_d[(4'hb + M_regfile_q[64+15-:16])*16+15-:16] = M_regfile_q[(4'hb + M_regfile_q[64+15-:16])*16+15-:16] + 1'h1;
        end
        M_regfile_d[0+15-:16] = 3'h6;
      end
      3'h6: begin
        we = 1'h1;
        alufn = 6'h33;
        ra = 4'hb + M_regfile_q[64+15-:16];
        bsel = 2'h2;
        rb = 4'hf;
        M_regfile_d[0+15-:16] = 3'h7;
      end
      3'h7: begin
        if (M_regfile_q[16+0+0-:1]) begin
          M_regfile_d[(4'hb + M_regfile_q[64+15-:16])*16+15-:16] = 1'h0;
          M_regfile_d[0+15-:16] = 4'h8;
        end else begin
          M_regfile_d[0+15-:16] = 2'h3;
        end
      end
      4'h8: begin
        we = 1'h1;
        alufn = 6'h33;
        ra = 3'h7 + M_regfile_q[64+15-:16];
        bsel = 2'h2;
        rb = 4'hd;
        M_regfile_d[0+15-:16] = 4'h9;
      end
      4'h9: begin
        if (M_regfile_q[16+0+0-:1]) begin
          M_regfile_d[0+15-:16] = 4'ha;
        end else begin
          M_regfile_d[0+15-:16] = 2'h3;
        end
        M_regfile_d[(3'h7 + M_regfile_q[64+15-:16])*16+15-:16] = 16'h0000;
        M_regfile_d[(4'h9 + M_regfile_q[64+15-:16])*16+15-:16] = 16'h0000;
      end
      4'ha: begin
        we = 1'h1;
        alufn = 6'h20;
        ra = 3'h5 + M_regfile_q[64+15-:16];
        bsel = 2'h1;
        rc = 3'h5 + M_regfile_q[64+15-:16];
        M_regfile_d[0+15-:16] = 4'hb;
      end
      4'hb: begin
        we = 1'h1;
        alufn = 6'h00;
        ra = 3'h5 + M_regfile_q[64+15-:16];
        bsel = 2'h1;
        rc = 3'h5 + M_regfile_q[64+15-:16];
        M_regfile_d[0+15-:16] = 4'hc;
      end
      4'hc: begin
        if (M_regfile_q[(3'h5 + M_regfile_q[64+15-:16])*16+6+0-:1]) begin
          M_regfile_d[0+15-:16] = 4'hd;
        end else begin
          M_regfile_d[0+15-:16] = 2'h3;
        end
      end
      4'hd: begin
        M_delay_d = 1'h0;
        M_regfile_d[0+15-:16] = 4'he;
      end
      4'he: begin
        if (buttonPressed[5+0-:1]) begin
          buttonSeenOut[5+0-:1] = 1'h1;
          M_regfile_d[0+15-:16] = 1'h0;
        end else begin
          if (M_delay_q[26+0-:1]) begin
            M_regfile_d[0+15-:16] = 4'hf;
          end else begin
            M_delay_d = M_delay_q + 1'h1;
          end
        end
      end
      4'hf: begin
        M_regfile_d[(3'h5 + M_regfile_q[64+15-:16])*16+15-:16] = ~M_regfile_q[(3'h5 + M_regfile_q[64+15-:16])*16+15-:16];
        M_regfile_d[0+15-:16] = 4'hd;
      end
    endcase
    a = M_regfile_q[(ra)*16+15-:16];
    
    case (bsel)
      default: begin
        b = M_regfile_q[(rb)*16+15-:16];
      end
      2'h0: begin
        b = 16'h0000;
      end
      2'h1: begin
        b = 16'h0001;
      end
      2'h3: begin
        b = 16'hffff;
      end
    endcase
    if (we) begin
      M_regfile_d[(rc)*16+15-:16] = wd;
    end
    regfileRead = M_regfile_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_delay_q <= 1'h0;
    end else begin
      M_delay_q <= M_delay_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_regfile_q <= 256'h0008000000000000000000000000000000000000000000009fff000000000000;
    end else begin
      M_regfile_q <= M_regfile_d;
    end
  end
  
endmodule
